import {
  /backend/repository/UserRepository,
  /backend/repository/TeamRepository,
  /backend/repository/WorkplaceRepository,
  /backend/repository/MeetingRoomRepository,
  /backend/repository/ReservationRepository
}

function onDataSync(userId, deviceType) {
  if (userId == "superUser") {
    if (deviceType == "MHUB") {
      return dataSyncByAdministrator();
    }
    return [];
  }
  var user = getUserById(userId);
  if (user.role == "administrator" && deviceType == "MHUB") {
    return dataSyncByAdministrator();
  }
  if (user.role == "worker" && deviceType == "MHUB") {
    return [];
  }
  if (user.role == "worker" && deviceType == "MOBILE") {
    return dataSyncByWorker(user);
  }
  else {
    error("Data sync unknown role: " + user.role);
    throw UnknownUserRoleException;
  }
}

function dataSyncByAdministrator() {
  return [
    createDataSyncElement("team", getTeamsForMhub()),
    createDataSyncElement("user", getUsersForMhub()),
    createDataSyncElement("workplace", getWorkplacesForMhub()),
    createDataSyncElement("meetingRoom", getMeetingRoomsForMhub())
  ];
}

function dataSyncByWorker(user) {
  var currentUser = {
    "id": user.id,
    "teamId": user.teamId,
    "name": user.name,
    "email": user.email,
    "visible": user.visible
  };
  return [
    createDataSyncElement("user", [currentUser]),
    createDataSyncElement("team", getTeamsForMobile()),
    createDataSyncElement("workplace", getWorkplacesForMobile()),
    createDataSyncElement("meetingRoom", getMeetingRoomsForMobile()),
    createDataSyncElement("reservation", getReservations()),
  ];
}
