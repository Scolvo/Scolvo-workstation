import {
  /backend/repository/UserRepository,
  /backend/repository/TeamRepository,
  /backend/repository/WorkplaceRepository,
  /backend/repository/MeetingRoomRepository,
  /backend/repository/ReservationRepository
}

function onDataSync(userId, deviceType) {
  debug("onDataSync for userId '" + userId + "' and deviceType '" + deviceType + "' ...");
  if (userId == "superUser") {
    if (deviceType == "MHUB") {
      debug("Super User case");
      return dataSyncBySuperAdministrator();
    }
    return [];
  }
  var user = getUserById(userId);
  if (user.role == "administrator" && deviceType == "MHUB") {
    debug("Admin case as creator");
    return dataSyncByAdministrator(userId);
  }
  if (user.role == "worker" && deviceType == "MHUB") {
    return [];
  }
  if (user.role == "worker" && deviceType != "MHUB") {
    return dataSyncByWorker();
  }
  else {
    error("Data sync unknown role: " + user.role);
    throw UnknownUserRoleException;
  }
}

function dataSyncByAdministrator(userId) {
  return [
    createDataSyncElement("team", getTeams()),
    createDataSyncElement("user", getUsersForMhubByCreator(userId)),
    createDataSyncElement("workplace", getWorkplaces()),
    createDataSyncElement("meetingRoom", getMeetingRoomsForMhub())
  ];
}

function dataSyncBySuperAdministrator() {
  return [
    createDataSyncElement("team", getTeams()),
    createDataSyncElement("user", getUsersForMhub()),
    createDataSyncElement("workplace", getWorkplaces()),
    createDataSyncElement("meetingRoom", getMeetingRoomsForMhub())
  ];
}

function dataSyncByWorker() {
  return [
    createDataSyncElement("user", getUsersForMobile()),
    createDataSyncElement("team", getTeams()),
    createDataSyncElement("workplace", getWorkplaces()),
    createDataSyncElement("meetingRoom", getMeetingRoomsForMobile()),
    createDataSyncElement("reservation", getReservations()),
  ];
}
