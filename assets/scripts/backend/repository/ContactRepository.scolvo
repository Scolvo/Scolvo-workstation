function getContactsByUserId(userId) {
  return select()
    .selectAs("contact.id", "id")
    .selectAs("contact.name", "name")
    .selectAs("contact.email", "email")
    .selectAs("contact.phone", "phone")
    .selectAs("contact.companyId", "companyId")
    .from("contact")
    .join("innerJoin", table("company"), and(custom("contact.companyId = company.companyId"), eq("company.userId", userId)))
    .execute();
}

function getContactsByBusinessCenterId(businessCenterId) {
  return select()
    .selectAs("contact.id", "id")
    .selectAs("contact.name", "name")
    .selectAs("contact.email", "email")
    .selectAs("contact.phone", "phone")
    .selectAs("contact.companyId", "companyId")
    .from("contact")
    .join("innerJoin", table("company"), custom("contact.companyId = company.companyId"))
    .join("innerJoin", table("user"), and(eq("user.businessCenterId", businessCenterId), eq("user.role", "relationshipManager"), custom("company.userId = user.id")))
    .execute();
}

function getRegularClientContactsByBusinessCenterId(businessCenterId) {
  return select()
    .selectAs("contact.id", "id")
    .selectAs("contact.name", "name")
    .selectAs("contact.email", "email")
    .selectAs("contact.phone", "phone")
    .selectAs("contact.companyId", "companyId")
    .from("contact")
    .join("innerJoin", table("company"), and(custom("contact.companyId = company.companyId"), eq("company.companyType", "regular")))
    .join("innerJoin", table("user"), and(eq("user.businessCenterId", businessCenterId), eq("user.role", "relationshipManager"), custom("company.userId = user.id")))
    .execute();
}

function getRegularClientContacts() {
  return select()
    .selectAs("contact.id", "id")
    .selectAs("contact.name", "name")
    .selectAs("contact.email", "email")
    .selectAs("contact.phone", "phone")
    .selectAs("contact.companyId", "companyId")
    .from("contact")
    .join("innerJoin", table("company"), and(custom("contact.companyId = company.companyId"), eq("company.companyType", "regular")))
    .execute();
}

function getRegularClientContactsByBusinessCenterIds(businessCenterIds) {
  var contacts = [];
  businessCenterIds.each(function (businessCenterId) {
    contacts.addAll(getRegularClientContactsByBusinessCenterId(businessCenterId));
  });
  return contacts;
}

function getContactsByCompanyId(companyId) {
  return select()
    .from("contact")
    .where(eq("companyId", companyId))
    .execute();
}

function deleteContacts(companyId) {
  var contactsDg = [];
  getContactsByCompanyId(companyId).each(function (contactDao) {
    contactsDg.add({
      "id": contactDao.id,
      "changeType": "DELETE"
    });
    insertHistoryExecution("contact", contactDao);
    deleteExecution("contact", contactDao.id);
  });
  publishBroadcast("contact", contactsDg);
}
