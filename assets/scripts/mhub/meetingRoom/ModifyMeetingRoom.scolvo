var uploadedModifiedMeetingRoomMapPath;
var modifiedMeetingRoomName;
var modifiedMeetingRoomLocation;
var modifiedMeetingRoomCapacity;
var modifiedMeetingRoomId;

function displayModifyMeetingRoomPage(originId, meetingRoomId) {
  modifiedMeetingRoomId = meetingRoomId;
  var meetingRoom = getMeetingRoomById(meetingRoomId);
  var data = {
    "ModifyMeetingRoomPage": {
      "ModifyMeetingRoomForm": {
        "name": meetingRoom.name,
        "location": meetingRoom.location,
        "capacity": decimalFormat(meetingRoom.capacity, "#")
      }
    }
  };
  display(ModifyMeetingRoomPage, data, originId);
}

page ModifyMeetingRoomPage {
  layout: vertical;
  template: general;

  form ModifyMeetingRoomForm {
    template: normal;
    span: 24;
    actions: [
      SaveModifiedMeetingRoom
    ]
    fields: [
      field Name => name formItemInputNormal,
      field Location => location formItemInputNormal,
      field Capacity => capacity formItemInputNormal,
      field UploadMap => uploadMap formItemUploadSingle
    ]
  }
}

function onModifyMeetingRoomPageLoaded(originId) {}

function onSaveModifiedMeetingRoom(originId) {
  var meetingRoomData = $IN.data;
  var userValidationResult = validateMeetingRoomData(meetingRoomData, originId);
  if (userValidationResult.messages.size() != 0) {
    publish(userValidationResult);
    return null;
  }

  if(meetingRoomData.UploadMap != null) {
    uploadedModifiedMeetingRoomMapPath = createMeetingRoomMapRelativePath(modifiedMeetingRoomId, meetingRoomData.UploadMap.fileName);
    modifiedMeetingRoomName = meetingRoomData.Name;
    modifiedMeetingRoomLocation = meetingRoomData.Location;
    modifiedMeetingRoomCapacity = parseNumber(meetingRoomData.Capacity);
    documentPut(originId, uploadedModifiedMeetingRoomMapPath, meetingRoomData.UploadMap.absolutePath, "ModifyMeetingRoomMapUploadSuccess", "MeetingRoomMapUploadFailure");
  }
  else {
    var meetingRoomDao = {
      "id": createdMeetingRoomId,
      "name": meetingRoomData.Name,
      "location": meetingRoomData.Location,
      "capacity": parseNumber(meetingRoomData.Capacity),
      "changeType": "UPDATE"
    };
    updateMeetingRoomDao(meetingRoomDao);
  }
}

function updateMeetingRoomDao(meetingRoomDao) {
  updateExecution("meetingRoom", meetingRoomDao.id, meetingRoomDao);
  sendDataChangeRq(originId, "meetingRoom", [meetingRoomDao]);
  fireEvent(buildRefreshItemEvent("MeetingRoomsList", createMeetingRoomsListData()), "MeetingRoomsPage");
  finishPage("ModifyMeetingRoomPage" ,originId);
}

function onModifyMeetingRoomMapUploadSuccess(originId) {
  var meetingRoomDao = {
    "id": modifiedMeetingRoomId,
    "name": modifiedMeetingRoomName,
    "location": modifiedMeetingRoomLocation,
    "capacity": modifiedMeetingRoomCapacity,
    "mapPicturePath": uploadedModifiedMeetingRoomMapPath,
    "changeType": "UPDATE"
  };
  updateMeetingRoomDao(meetingRoomDao);


  publishNotification({
    "userId": getCurrentUser().userId,
    "level": "default",
    "type": "text",
    "duration": "long",
    "message": DICTIONARY.uploadSuccess_msg
  }, originId);
}
