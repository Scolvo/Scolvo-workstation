import {
  /mhub/common/MapDisplay
}

var modifyMeetingRoomData;
var modifiedMeetingRoomId;

var uploadedModifiedMeetingRoomMapPath;
var modifiedMeetingRoomOriginalMapPath;
var modifiedMeetingRoomMapPathToShow;
var modifiedMeetingRoomOriginalName;

function displayModifyMeetingRoomPage(originId, meetingRoomId) {
  modifiedMeetingRoomId = meetingRoomId;
  uploadedModifiedMeetingRoomMapPath = null;

  modifyMeetingRoomData = getMeetingRoomById(meetingRoomId);
  debug("Actual meeting room: " + modifyMeetingRoomData);
  modifiedMeetingRoomOriginalMapPath = modifyMeetingRoomData.mapPicturePath;
  modifiedMeetingRoomMapPathToShow = modifyMeetingRoomData.mapPicturePath;
  modifiedMeetingRoomOriginalName = modifyMeetingRoomData.name;
  if (modifyMeetingRoomData.capacity != null) {
    var actualCapacity = "" + modifyMeetingRoomData.capacity;
    modifyMeetingRoomData.put("capacity", actualCapacity);
  }

  var events = [
    createValueChangeTargetEvent("NameInput", modifyMeetingRoomData.name),
    createValueChangeTargetEvent("LocationInput", modifyMeetingRoomData.location),
    createValueChangeTargetEvent("CapacityInput", modifyMeetingRoomData.capacity),
    createValueChangeTargetEvent("MapPicturePathInput", modifyMeetingRoomData.mapPicturePath)

    createValueChangeSourceEvent("NameInput", "ModifyModifyMeetingRoomNameChanged"),
    createValueChangeSourceEvent("LocationInput", "ModifyModifyMeetingRoomLocationChanged"),
    createValueChangeSourceEvent("CapacityInput", "ModifyModifyMeetingRoomCapacityChanged"),
    createValueChangeSourceEvent("MapPictureUploadField", "MapPictureUploadFieldChanged"),

    createClickSourceEvent("DeleteMapPicture", "ModifyModifyMeetingRoomDeleteMapPictureClicked"),
    createClickSourceEvent("SaveModifiedMeetingRoom", "SaveModifiedMeetingRoomClicked")
  ];

  if (modifiedMeetingRoomOriginalMapPath == null || modifiedMeetingRoomOriginalMapPath.isEmpty()) {
    events.add(createVisibilityChangeTargetEvent("DeleteMapPicture", "gone"));
  }

  display(ModifyMeetingRoomPage, {}, originId, events);
}

page ModifyMeetingRoomPage {
  layout: vertical;
  template: general;

  inputField NameInput {
    inputType: text;
  }

  inputField LocationInput {
    inputType: text;
  }

  inputField CapacityInput {
    inputType: number;
  }

  inputField MapPicturePathInput {
    inputType: textReadOnly;
  }

  container MapPictureContainer {
    layout: horizontal;

    inputField MapPictureUploadField {
      template: inputFieldSimple;
      inputType: upload;
    }

    spacer {
      span: 5;
    }

    button DeleteMapPicture {
      template: primary;
    }
  }

  button SaveModifiedMeetingRoom {
    template: primary;
  }
}

function onModifyMeetingRoomPageLoaded(originId) {}

function onModifyModifyMeetingRoomNameChanged(originId) {
  modifyMeetingRoomData.put("name", $IN.data.value);
}

function onModifyModifyMeetingRoomLocationChanged(originId) {
  modifyMeetingRoomData.put("location", $IN.data.value);
}

function onModifyModifyMeetingRoomCapacityChanged(originId) {
  modifyMeetingRoomData.put("capacity", $IN.data.value);
}

function onMapPictureUploadFieldChanged(originId) {
  modifyMeetingRoomData.put("uploadMap", $IN.data.value);
  debug("New selected file: " + modifyMeetingRoomData.uploadMap);
}

function onModifyModifyMeetingRoomDeleteMapPictureClicked(originId) {
  modifyMeetingRoomData.put("uploadMap", null);
  modifiedMeetingRoomMapPathToShow = null;
  fireEvent(createRefreshItemTargetEvent("MapPicturePathInput", ""), "ModifyMeetingRoomPage");
  debug("Map picture path updated to " + modifyMeetingRoomData.uploadMap);
}

function onSaveModifiedMeetingRoomClicked(originId) {
  debug("Meeting room data: " + modifyMeetingRoomData);

  if (validateMeetingRoomModifiedData(modifyMeetingRoomData, "ModifyMeetingRoomPage")) {

    if (modifyMeetingRoomData.uploadMap != null && modifyMeetingRoomData.uploadMap.absolutePath != null) {

      uploadedModifiedMeetingRoomMapPath = createMeetingRoomMapRelativePath(modifiedMeetingRoomId, modifyMeetingRoomData.uploadMap.originalFileName);
      debug("Uploading new picture file to " + uploadedModifiedMeetingRoomMapPath);
      documentPut(originId, uploadedModifiedMeetingRoomMapPath, modifyMeetingRoomData.uploadMap.absolutePath, "ModifyMeetingRoomMapUploadSuccess", "MeetingRoomMapUploadFailure");

    } else {
      // The modifyTeamData.uploadMap is null or empty
      var mapPicturePathValue = modifiedMeetingRoomOriginalMapPath;
      if (modifiedMeetingRoomOriginalMapPath != modifiedMeetingRoomMapPathToShow) {
        mapPicturePathValue = modifiedMeetingRoomMapPathToShow;
      }

      var meetingRoomDao = {
        "id": modifiedMeetingRoomId,
        "name": modifyMeetingRoomData.name,
        "location": modifyMeetingRoomData.location,
        "capacity": parseNumber(modifyMeetingRoomData.capacity),
        "mapPicturePath": mapPicturePathValue,
        "changeType": "UPDATE"
      };
      updateMeetingRoomDao(meetingRoomDao);

      if (mapPicturePathValue != modifiedMeetingRoomOriginalMapPath && modifiedMeetingRoomOriginalMapPath != null) {
        documentDelete(modifiedMeetingRoomOriginalMapPath);
      }

      finishPage("ModifyMeetingRoomPage" ,originId);
    }
  }
}

function updateMeetingRoomDao(meetingRoomDao) {
  updateTypeDefinition("meetingRoom", meetingRoomDao.id, meetingRoomDao);
  sendDataChange("meetingRoom", [meetingRoomDao.deepClone()]);

  refreshMeetingRoomsPageMeetingRoomsList();
}

function onModifyMeetingRoomMapUploadSuccess(originId) {
  debug("Upload has been done!");

  var meetingRoomDao = {
    "id": modifiedMeetingRoomId,
    "name": modifyMeetingRoomData.name,
    "location": modifyMeetingRoomData.location,
    "capacity": modifyMeetingRoomData.capacity,
    "mapPicturePath": uploadedModifiedMeetingRoomMapPath,
    "changeType": "UPDATE"
  };
  updateMeetingRoomDao(meetingRoomDao);
  publishNotificationMessage(originId, DICTIONARY.uploadSuccess_msg);

  if (modifiedMeetingRoomOriginalMapPath != null) {
    documentDelete(modifiedMeetingRoomOriginalMapPath);
  }
  finishPage("ModifyMeetingRoomPage" ,originId);
}

function onMapPicturePathInputHelperAction(originId) {
  if (modifiedMeetingRoomOriginalMapPath != null && !modifiedMeetingRoomOriginalMapPath.isEmpty()) {
    displayMapPopup(originId, modifiedMeetingRoomOriginalName, modifiedMeetingRoomOriginalMapPath);
  }
}
