import {
  /mhub/meetingRoom/CreateMeetingRoom,
  /mhub/meetingRoom/ModifyMeetingRoom,
  /mhub/repository/MeetingRoomRepository
}

function displayMeetingRoomsPage(originId) {
  var data = {
    "MeetingRoomsPage": {
      "MeetingRoomsList": createMeetingRoomsListData()
    }
  };
  display(MeetingRoomsPage, data, originId);
}

page MeetingRoomsPage {
  layout: vertical;
  template: general;
  scolvoMenuVisible: true;
  settingsVisible: true;

  list MeetingRoomsList {
    template: normal;
    itemTemplate: listItemCard;
    span: 0;
    filterVisible: true;

    actions: [
      CreateMeetingRoom
    ]
    columns: [
      mainText => name,
      text => text
    ]
  }
}

function refreshMeetingRoomsPageMeetingRoomsList() {
  fireEvent(createRefreshItemTargetEvent("MeetingRoomsList", createMeetingRoomsListData()), "MeetingRoomsPage");
}

function createMeetingRoomsListData() {
  return getMeetingRooms().map(function (meetingRoomDao) {
    var daoActions = ["ModifyMeetingRoom"];
    if (getUnhandledNotesCountForMeetingRoom(meetingRoomDao.id) > 0) {
      daoActions.add("ShowMeetigRoomNotes");
    }
    var textValue = DICTIONARY.page_MeetingRoomsPage_MeetingRoomsList_location_label + ": " + meetingRoomDao.location + " | " + 
      DICTIONARY.page_MeetingRoomsPage_MeetingRoomsList_capacity_label + ": " + meetingRoomDao.capacity;
    return {
      "id": meetingRoomDao.id,
      "name": meetingRoomDao.name,
      "location": meetingRoomDao.location,
      "capacity": meetingRoomDao.capacity,
      "text": textValue,
      "actions": daoActions
    };
  });
}

function onMeetingRoomsPageLoaded(originId) {}

function onMeetingRoomsListSelectionChanged(originId) {}

function onCreateMeetingRoom(originId) {
  displayCreateMeetingRoomPage(originId);
}

function onModifyMeetingRoom(originId) {
  displayModifyMeetingRoomPage(originId, $IN.data.id);
}

function onShowMeetigRoomNotes(originId) {
  displayMeetingRoomNotesPage(originId, $IN.data.id);
}
