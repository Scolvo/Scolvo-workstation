import {
  /mhub/repository/ImportMetadataRepository
}

function displayImportPage(originId) {
  var importMetadataData = retrieveImportMetadataForTypes();

  var data = {
    "ImportPage": {
      "ImportForm": {},
      "ImportMetadataList": importMetadataData
    }
  };
  display(ImportPage, data, originId);
}

function retrieveImportMetadataForTypes() {
  info("retieving import metadata ...");
  var result = competeImportMetadataTypes(getImportMetadataForImportTypes())
    .map(function(importMetadataDao) {
      return buildImportMetadataListRowFromDao(importMetadataDao);
    });
  info("Retrieved: " + result);
  return result;
}

function competeImportMetadataTypes(importMetadataDaos) {
  var resultMap = {
    "prospect": "-",
    "exposure": "-",
    "regular": "-"
  };
  importMetadataDaos.each(function(importMetadataDao) {
    resultMap.put(importMetadataDao.importType, importMetadataDao.importDateFormatted);
  });

  var result = [];
  resultMap.keySet().each(function(key) {
    result.add({"importType": key, "importDateFormatted": resultMap.get(key)});
  });
  return result;
}

function buildImportMetadataListRowFromDao(importMetadataDao) {
  importMetadataDao.put("id", importMetadataDao.importType);
  importMetadataDao.put("importTypeName", resolveImportTypeName(importMetadataDao.importType));
  return importMetadataDao;
}

function resolveImportTypeName(importType) {
  return DICTIONARY.get("importMetadataImportType_" + importType);
}

function refreshImportMetadataList(originId) {
  info("Refreshing list with data ...");
  var newData = retrieveImportMetadataForTypes();
  info("fire vent ...");
  fireEvent(buildRefreshItemEvent("ImportMetadataList", newData), originId);
}

page ImportPage {
  layout: vertical;
  template: general;

  form ImportForm {
    template: normal;
    span: 24;
    actions: [
      ImportAction
    ]
    fields: [
      field ImportFile => importFile formItemUploadSingle
    ]
  }

  list ImportMetadataList {
    template: normal;
    itemTemplate: defaultItem;
    span: 24;
    filterVisible: false;
    actions: []
    columns: [
      importTypeName,
      importDateFormatted
    ]
  }
}

function onImportPageLoaded(originId) {}

function onImportAction(originId) {
  var importData = $IN.data;
  var validationResult = validateImport(importData, originId);
  if (validationResult.getMessages().size() > 0) {
    publish(validationResult);
  } else {
    var relativePath = "import/" + uuid();

    documentPutAsBytes(importData.ImportFile, relativePath);

    var requestData = {
      "type": "importProspectClientRequest",
      "path": relativePath,
      "userId": getCurrentUser().userId
    };
    sendDataChangeRq(originId, "request", [requestData]);
    onImport(originId);
  }
}

function validateImport(data, originId) {
  var validationResult = com.scolvo.core.vm.action.display.FormValidationResult(originId);
  if (data.ImportFile == null) {
    validationResult.addMessage("ERROR", "ImportFile", DICTIONARY.page_ImportPage_ImportForm_ImportFile_validationMsg);
  }
  return validationResult;
}
