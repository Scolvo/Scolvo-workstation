import {
  /mhub/user/CreateModifyUserCommon
}

var passwordChangePassword = null;
var passwordChangeConfirmPassword = null;
function displayPasswordChangePage(originId) {
  passwordChangePassword = null;
  passwordChangeConfirmPassword = null;
  var events = [
    createValueChangeSourceEvent("PasswordInput", "PasswordChangePagePasswordChanged"),
    createValueChangeSourceEvent("ConfirmPasswordInput", "PasswordChangePageConfirmPasswordChanged"),
    createClickSourceEvent("SavePasswordChange", "SavePasswordChange")
  ];
  display(PasswordChangePage, {}, originId, events);
}

page PasswordChangePage {
  layout: vertical;
  template: general;
  scolvoMenuVisible: true;
  settingsVisible: true;

  inputField PasswordInput {
    inputType: password;
  }

  inputField ConfirmPasswordInput {
    inputType: password;
  }

  button SavePasswordChange {
    template: primary;
  }
}

function onPasswordChangePageLoaded(originId) {}

function onPasswordChangePagePasswordChanged(originId) {
  passwordChangePassword = $IN.data.value;
}

function onPasswordChangePageConfirmPasswordChanged(originId) {
  passwordChangeConfirmPassword = $IN.data.value;
}

function onSavePasswordChange(originId) {
  if (!validateUserPasswordWithValues(passwordChangePassword, passwordChangeConfirmPassword, "PasswordInput", "ConfirmPasswordInput", "PasswordChangePage")) {
    return null;
  }

  var requestData = {
    "userId": getCurrentUser().userId,
    "password": passwordChangePassword,
    "type": "changePasswordRequest"
  };
  sendDataChange("request", [requestData]);
  onPasswordChange(originId);
  publishNotificationMessage(originId, DICTIONARY.page_PasswordChangePage_passwordChangeHasBeenSentSuccessfully);
}
