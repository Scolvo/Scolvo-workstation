import {
  /mhub/repository/BusinessCenterRepository,
  /mhub/common/CorporateCommon,
  /mhub/businessCenter/BusinessCenterValidation
}

var originalBusinessCenterDao;

function displayModifyBusinessCenter(originId, selectedBusinessCenterId) {
  originalBusinessCenterDao = getBusinessCenterById(selectedBusinessCenterId);
  var data = {
    "ModifyBusinessCenterPage": {
      "ModifyBusinessCenterForm": {
        "id": originalBusinessCenterDao.id,
        "code": originalBusinessCenterDao.businessCenterCode,
        "name": originalBusinessCenterDao.name,
        "corporateOptions": getCorporateOptions(originalBusinessCenterDao.corporate)
      }
    }
  };

  display(ModifyBusinessCenterPage, data, originId);
}

page ModifyBusinessCenterPage {
  layout: vertical;
  template: general;

  form ModifyBusinessCenterForm {
    template: normal;
    span: 24;
    actions: [
      BackToBusinessCenters,
      SaveModifyBusinessCenter
    ]
    fields: [
      field Code => code formItemInputNormal,
      field Name => name formItemInputNormal,
      field Corporate => corporate formItemSelectNormal
    ]
  }
}

function onModifyBusinessCenterPageLoaded(originId) {}

function onBackToBusinessCenters(originId) {
  onBusinessCenters(originId);
}

function onSaveModifyBusinessCenter(originId) {
  var businessCenterData = $IN.data;
  var validationResult = validateModifyBusinessCenter(businessCenterData, originId);
  if (validationResult.messages.size() != 0) {
    publish(validationResult);
    return null;
  }

  var businessCenterDao = {
    "id": businessCenterData.id,
    "businessCenterCode": businessCenterData.Code,
    "name": businessCenterData.Name,
    "corporate": businessCenterData.Corporate
    "changeType": "UPDATE"
  };

  updateExecution("businessCenter", businessCenterDao.id, businessCenterDao);
  sendDataChangeRq(originId, "businessCenter", [businessCenterDao]);

  onBackToBusinessCenter(originId);
}

function validateModifyBusinessCenter(businessCenterData, originId) {
  var validationResult = com.scolvo.core.vm.action.display.FormValidationResult(originId);
  validateModifyBusinessCenterCode(businessCenterData.Code, validationResult);
  validateBusinessCenterName(businessCenterData.Name, validationResult);
  validateBusinessCenterCorporate(businessCenterData.Corporate, validationResult);
  return validationResult;
}

function validateModifyBusinessCenterCode(businessCenterCode, validationResult) {
  if (originalBusinessCenterDao.businessCenterCode == businessCenterCode) {
    return null;
  }

  validateBusinessCenterCode(businessCenterData.Code, validationResult);
}
