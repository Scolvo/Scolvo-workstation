import {
  /mobile/memo/MeetingMemoPage,
  /mobile/repository/MeetingMemoRepository,
  /mobile/SessionUser,
  /mobile/memo/ProspectMeetingMemoDetails,
  /mobile/memo/RegularMeetingMemoDetails,
  /mobile/memo/MeetingMemoBuilder
}

var selectedClientType = null;

function displayMeetingMemoListFragment(originId, fragmentContainerId, companyId, clientType) {
  selectedClientType = clientType;
  var meetingMemoDaos;
  if(clientType == "regular") {
    meetingMemoDaos = getRegularMeetingMemosByCompanyId(companyId);
  }
  else if(clientType == "prospect") {
    meetingMemoDaos = getProspectMeetingMemosByCompanyId(companyId);
  }
  else {
    throw UnknownClientTypeException;
  }
  if(sessionUserIsCM() || sessionUserIsHeadCM()) {
    displayCMMemoList(originId, fragmentContainerId, meetingMemoDaos);
  }
  else {
    displayRMMemoList(originId, fragmentContainerId, meetingMemoDaos);
  }
}

function displayCMMemoList(originId, fragmentContainerId, meetingMemoDaos) {
  var data = {
    "MeetingMemoListFragment": {
      "MeetingMemoList": buildMeetingMemoListData(meetingMemoDaos)
    }
  };
  displayFragment(fragmentContainerId, MeetingMemoListFragment, data, originId);
}

function displayRMMemoList(originId, fragmentContainerId, meetingMemoDaos) {
  var data = {
    "MeetingMemoRMListFragment": {
      "MeetingMemoRMList": buildMeetingMemoListData(meetingMemoDaos)
    }
  };
  displayFragment(fragmentContainerId, MeetingMemoRMListFragment, data, originId);
}

fragment MeetingMemoListFragment {
  layout: vertical;
  span: 0;
  template: general;

  list MeetingMemoList {
    template: listVerticalNormal;
    itemTemplate: listItemCard;
    span: 0;
    columns: [
      mainText => title,
      text => description
    ]
  }
}

fragment MeetingMemoRMListFragment {
  layout: vertical;
  span: 0;
  template: general;

  list MeetingMemoRMList {
    template: listVerticalNormal;
    itemTemplate: listItemCard;
    span: 0;
    actions: [
      StartMeeting
    ]
    columns: [
      mainText => title,
      text => description
    ]
  }
}

function onStartMeeting(originId) {
  displayMeetingMemoPage(originId, null);
}

function onMeetingMemoListFragmentLoaded(originId) {}

function onMeetingMemoRMListFragmentLoaded(originId) {}

function onMeetingMemoListSelectionChanged(originId) {
  if(selectedClientType == "prospect") {
    displayProspectMeetingMemoDetailsPage(originId, $IN.data.id);
  }
  else if(selectedClientType == "regular") {
    displayRegularMeetingMemoDetailsPage(originId, $IN.data.id);
  }
  else {
    throw UnknownClientTypeException;
  }
}

function onMeetingMemoRMListSelectionChanged(originId) {
  if(selectedClientType == "prospect") {
    displayProspectMeetingMemoDetailsPage(originId, $IN.data.id);
  }
  else if(selectedClientType == "regular") {
    displayRegularMeetingMemoDetailsPage(originId, $IN.data.id);
  }
  else {
    throw UnknownClientTypeException;
  }
}
