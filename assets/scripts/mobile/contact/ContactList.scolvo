import {
  /mobile/SessionUser,
  /mobile/contact/AddContact,
  /mobile/contact/EditContact,
  /mobile/repository/ContactRepository
}

var contactSelectedCompanyId;
var deleteContactDao;
var contactParentPageId;

function displayContactListFragment(originId, fragmentContainerId, companyId, parentPageId) {
  contactSelectedCompanyId = companyId;
  contactParentPageId = parentPageId;
  var contacts = getContactListFromContacts(getOrderedContactsForCompany(companyId));
  var data = {};
  var contactListData = {"ContactList": contacts};
  if (sessionUserIsRM() || sessionUserIsBCM()) {
    data.put("ContactListRMFragment", contactListData);
    displayFragment(fragmentContainerId, ContactListRMFragment, data, originId);
  } else {
    data.put("ContactListFragment", contactListData);
    displayFragment(fragmentContainerId, ContactListFragment, data, originId);
  }
}

fragment ContactListRMFragment {
  layout: vertical;
  span: 0;
  template: general;

  list ContactList {
    template: listVerticalNormal;
    itemTemplate: listItemCard;
    span: 0;
    actions: [
      AddContact
    ]
    columns: [
      mainText => name,
      text => phoneAndEmail
    ]
  }
}

function onContactListRMFragmentLoaded(originId) {}

fragment ContactListFragment {
  layout: vertical;
  span: 0;
  template: general;

  list ContactList {
    template: listVerticalNormal;
    itemTemplate: listItemCard;
    span: 0;
    columns: [
      mainText => name,
      text => phoneAndEmail
    ]
  }
}

function onContactListFragmentLoaded(originId) {}

function onAddContact(originId) {
  displayAddContactPage(originId, contactSelectedCompanyId, contactParentPageId);
}

function onEditContact(originId) {
  displayEditContactPage(originId, $IN.data);
}

function onDeleteContact(originId) {
  deleteContactDao = $IN.data;
  display(DeleteContactConfirmPage, {}, originId);
}

function getContactListFromContacts(contacts) {
  return contacts.map(function(contact) {
    return getContactListDataFrom(contact, false);
  });
}

function onContactListSelectionChanged(originId) {}

function onMailToContact(originId) {
  var emailData = {
    "addresses": [$IN.data.email]
  };
  sendEmail(emailData);
}

function onCallContact(originId) {
  startCall($IN.data.phone);
}

page DeleteContactConfirmPage {
  template: confirmationPopup;
  layout: vertical;
}

function onDeleteContactConfirmPageSave(originId) {
  fireEvent(buildRemoveItemEvent("ContactList", deleteContactDao.id), originId);
  fireEvent(buildRemoveItemEvent("ContactSearchList", deleteContactDao.id), originId);
  deleteContactDao.put("changeType", "DELETE");
  deleteExecution("contact", deleteContactDao.id);
  sendDataChangeRq(originId, "contact", [deleteContactDao]);
}

function onDeleteContactConfirmPageCancel(originId) {}
