import {
  /mobile/Builders,
  /mobile/contact / ContactBuilder,
  /common/EmailFormatValidator
}

var editedContact;

function displayEditContactPage(originId, selectedContact) {
  editedContact = selectedContact.deepClone();

  var actionEvents = [
    buildTargetValueChangeEvent("EditContactNameInput", editedContact.name),
    buildTargetValueChangeEvent("EditContactPhoneInput", editedContact.phone),
    buildTargetValueChangeEvent("EditContactEmailInput", editedContact.email),
    buildSourceValueChangedEvent("EditContactNameInput", "EditContactNameChanged"),
    buildSourceValueChangedEvent("EditContactPhoneInput", "EditContactPhoneChanged"),
    buildSourceValueChangedEvent("EditContactEmailInput", "EditContactEmailChanged"),
    buildSourceClickedEvent("CancelButton", "EditContactCancelButtonClicked"),
    buildSourceClickedEvent("SaveButton", "EditContactSaveButtonClicked")
  ];

  display(EditContactPage, {}, originId, actionEvents);
}

page EditContactPage {
  layout: vertical;
  template: general;

  inputField EditContactNameInput {
    inputType: text;
  }

  inputField EditContactPhoneInput {
    inputType: number;
  }

  inputField EditContactEmailInput {
    inputType: text;
  }

  container ActionContainer {
    layout: horizontalButtonGroup;
    span: 0;

    button CancelButton {
      template: secondaryMedium;
    }

    button SaveButton {
      template: primaryMedium;
    }
  }
}

function onEditContactPageLoaded(originId) {}

function onEditContactCancelButtonClicked(originId) {
  finishPage("EditContactPage", originId);
}

function onEditContactSaveButtonClicked(originId) {
  if (!validateEditContact()) {
    return null;
  }
  var editContactDao = {
    "id": editedContact.id,
    "name": editedContact.name,
    "phone": editedContact.phone,
    "email": editedContact.email,
    "changeType": "UPDATE"
  };
  updateExecution("contact", editContactDao.id, editContactDao);
  sendDataChangeRq(originId, "contact", [editContactDao]);

  var editedCallLogData = getContactListDataFrom(editContactDao, isContactCalledFromSearch);

  fireEvent(buildTargetReplaceItemEvent("ContactList", editedCallLogData), "ProspectClientDetailPage");
  fireEvent(buildTargetReplaceItemEvent("ContactList", editedCallLogData), "RegularClientDetailPage");
  fireEvent(buildTargetReplaceItemEvent("ContactSearchList", editedCallLogData), "AdvancedSearchPage");
  finishPage("EditContactPage", originId);
}

function validateEditContact() {
  var validContact = true;
  if (editedContact.name.isEmpty()) {
    fireEvent(buildErrorValueChangeEvent("EditContactNameInput", DICTIONARY.contactValidationMsg_Name), originId);
    validContact = false;
  } else if (editedContact.name.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("EditContactNameInput", DICTIONARY.contactValidationMsg_NameTooLong), originId);
    validContact = false;
  }
  if (editedContact.email != null && !editedContact.email.isEmpty() && !isEmailFormatValid(editedContact.email)) {
    fireEvent(buildErrorValueChangeEvent("EditContactEmailInput", DICTIONARY.validationMsg_wrongEmailFormat), originId);
    validContact = false;
  }
  return validContact;
}

function onEditContactNameChanged(originId) {
  editedContact.put("name", $IN.data.message);
}

function onEditContactPhoneChanged(originId) {
  editedContact.put("phone", $IN.data.message);
}

function onEditContactEmailChanged(originId) {
  editedContact.put("email", $IN.data.message);
}
