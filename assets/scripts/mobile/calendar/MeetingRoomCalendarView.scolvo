import {
  /mobile/common/TeamsReservation,
  /mobile/repository/ReservationRepository,
  /mobile/repository/WorkstationRepository,
  /mobile/workstation/WorkstationsForADay
}

function displayMeetingRoomCalendarViewFragment(originId) {
  var data = {
    "MeetingRoomCalendarViewFragment": {
      "MeetingRoomCalendarViewList": createMeetingRoomCalendarViewReservationList()
    }
  };

  displayFragment("MeetingRoomsDashboardFragmentContainer", MeetingRoomCalendarViewFragment, data, originId);
}

function createMeetingRoomCalendarViewReservationList() {
  var calendarViewReservationsListData = [];
  var today = getDayStartForCentralTimeZone(now());
  var totalAvailableReservationUnits = getMeetingRooms().size() * MEETING_ROOM_DAILY_MINUTES;
  // Add more to the beginning and for the end to be sure with the time-zone changes
  var reservations = prepareMeetingRoomReservationForPeriod(dateSubtract(today, DATE_LIST_PREVIOUS_DAYS_PLUS_ONE, "day").getTime(), getDayEndForCentralTimeZone(dateAdd(now(), DATE_LIST_FOLLOWING_DAYS_PLUS_ONE, "day")).getTime());

  for(var i = DATE_LIST_PREVIOUS_DAYS; i > 0; i -= 1) {
    var currentDay = dateSubtract(today, i, "day");
    calendarViewReservationsListData.add(prepareCalendarDayData(currentDay, reservations, totalAvailableReservationUnits));
  }
  calendarViewReservationsListData.add(prepareCalendarDayData(today, reservations, totalAvailableReservationUnits));
  for(var i = 1; i <= DATE_LIST_FOLLOWING_DAYS; i += 1) {
    var currentDay = dateAdd(today, i, "day");
    calendarViewReservationsListData.add(prepareCalendarDayData(currentDay, reservations, totalAvailableReservationUnits));
  }

  return calendarViewReservationsListData;
}

fragment MeetingRoomCalendarViewFragment {
  layout: vertical;
  template: general;

  list MeetingRoomCalendarViewList {
    template: listVerticalNormal;
    itemTemplate: listItemCalendar;
    span: 0;
    filterVisible: false;
    columns: [
      eventDay => eventDate
    ]
  }
}

function onMeetingRoomCalendarViewFragmentLoaded(originId) {}


function onMeetingRoomCalendarViewListSelectionChanged(originId) {
  displayMeetingRoomsDailyPage(originId, $IN.data.selectedDay);
}
