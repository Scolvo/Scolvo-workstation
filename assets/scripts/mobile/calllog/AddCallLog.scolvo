import {
  /mobile/Builders
}

var callLogComment;
var addCallLogSelectedCompanyId;
var addCallLogParentPageId;

function displayCallLogPage(originId, selectedCompanyId, parentPageId) {
  callLogComment = null;
  addCallLogSelectedCompanyId = selectedCompanyId;
  addCallLogParentPageId = parentPageId;

  var actionEvents = [
    buildSourceValueChangedEvent("AddCallLogCommentInput", "AddCallLogCommentChanged"),
    buildSourceClickedEvent("CancelButton", "AddCallLogCancelButtonClicked"),
    buildSourceClickedEvent("SaveButton", "AddCallLogSaveButtonClicked")
  ];
  display(AddCallLogPage, {}, originId, actionEvents);
}

page AddCallLogPage {
  layout: vertical;
  template: general;

  inputField AddCallLogCommentInput {
    inputType: textArea;
  }

  container ActionContainer {
    layout: horizontalButtonGroup;
    span: 0;

    button CancelButton {
      template: secondaryMedium;
    }

    button SaveButton {
      template: primaryMedium;
    }
  }

}

function onAddCallLogPageLoaded(originId) {}

function onAddCallLogSaveButtonClicked(originId) {
  var callLogDao = {
    "id": uuid(),
    "companyId": addCallLogSelectedCompanyId,
    "createdAt": nowInMillis(),
    "changeType": "INSERT"
  };

  if (callLogComment != null) {
    callLogDao.put("comment", callLogComment);
  }

  insertExecution("callLog", callLogDao);
  sendDataChangeRq(originId, "callLog", [callLogDao]);

  fireEvent(buildRefreshItemEvent("CallLogsList", getCallLogListData(addCallLogSelectedCompanyId)), addCallLogParentPageId);
  finishPage("AddCallLogPage", originId);
}

function onAddCallLogCancelButtonClicked(originId) {
  finishPage("AddCallLogPage", originId);
}

function onAddCallLogCommentChanged(originId) {
  callLogComment = $IN.data.message;
}
