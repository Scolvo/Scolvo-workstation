import {
  /mobile/workstation/SaveReservation,
  /mobile/workstation/DeleteReservation
}

var selectedDay = null;
var selectedTeamId = null;
var reservingUser = null;

function displayWorkstationsPage(originId, day) {
  selectedDay = day;
  reservingUser = getLoggedInUser();
  selectedTeamId = reservingUser.teamId;
  var team = getTeamsData().get(selectedTeamId);
  var selectData = {
    "helper_label": team.location
  };
  if(team.mapPicturePath != null) {
    selectData.put("helper_icon", "\ue913");
  }
  var data = {
    "WorkstationsPage": {
      "headerText": dateToString(selectedDay, "yyyy MMMM dd."),
      "WorkstationsTeamSelect": selectData,
      "WorkstationsTeamSelectOptions": createTeamOptions(selectedTeamId),
      "WorkstationsList": createWorkstationsData()
    }
  };
  var actionEvents = [
    buildSourceSelectionChanged("WorkstationsTeamSelect", "WorkstationsTeamSelectChanged")
  ];
  display(WorkstationsPage, data, originId, actionEvents);
}

function createWorkstationsData() {
  var reservations = prepareWorkstationReservationForDay(selectedTeamId, selectedDay);
  return getWorkstationsForTeam(selectedTeamId).map(function (workstationDao) {
    var workstationData = {
      "id": workstationDao.id,
      "workstationName": workstationDao.name,
      "availability": resolveWorkstationAvailabilty(workstationDao.id, reservations, reservingUser),
      "availabilityPicture": resolveWorkstationAvailabiltyPicture(workstationDao.id, reservations)
    };
    if(reservations.get(workstationDao.id) != null && reservations.get(workstationDao.id).get("userId") == reservingUser.id) {
      workstationData.put("reservationId", reservations.get(workstationDao.id).get("id"));
      workstationData.put("actions", ["DeleteReservation"]);
    }
    else if(reservations.get(workstationDao.id) == null) {
      workstationData.put("actions", ["ReserveWorkstation"]);
    }
    return workstationData;
  });
}

function resolveWorkstationAvailabiltyPicture(workstationId, reservations) {
  if(reservations.get(workstationId) != null) {
    return "ICON_office-desk_alert";
  }
  return "ICON_office-desk_success";
}

page WorkstationsPage {
  layout: vertical;
  template: general;

  inputField  WorkstationsTeamSelect {
    inputType: selectOne;
  }

  list WorkstationsList {
    template: listVerticalNormal;
    filterVisible: false;
    span: 0;
    itemTemplate: listItemMultiLine;
    columns: [
      mainText => workstationName,
      subText => availability,
      prefixImage => availabilityPicture
    ]
  }
}

function onWorkstationsPageLoaded(originId) {}

function onWorkstationsTeamSelectHelperAction(originId) {
  var team = getTeamsData().get(selectedTeamId);
  displayMapPopup(originId, team.name, team.mapPicturePath);
}

function onReserveWorkstation(originId) {
  displaySaveReservationPopup(originId, $IN.data.id);
}

function onDeleteReservation(originId) {
  displayDeleteReservationPopup(originId, $IN.data.reservationId, $IN.data.id, selectedDay, false);
}

function resolveWorkstationAvailabilty(workstationId, reservations, user) {
  if(reservations.get(workstationId) == null) {
    return DICTIONARY.free;
  }
  if(user.visible) {
    return DICTIONARY.reserved + ", " + user.name;
  }
  return DICTIONARY.reserved;
}

function onWorkstationsTeamSelectChanged(originId) {
  selectedTeamId = $IN.data.value;
  var team = getTeamsData().get(selectedTeamId);
  var selectComponentData = {
    "helper_label": team.location
  };
  if(team.mapPicturePath != null) {
    selectComponentData.put("helper_icon", "\ue913");
  }
  else {
    selectComponentData.put("helper_icon", "");
  }
  fireEvent(buildTargetValueChangeEvent("WorkstationsTeamSelect", selectComponentData), originId);
  fireEvent(buildRefreshItemEvent("WorkstationsList", createWorkstationsData()), "WorkstationsPage");
}

function onWorkstationsListSelectionChanged(originId) {}
