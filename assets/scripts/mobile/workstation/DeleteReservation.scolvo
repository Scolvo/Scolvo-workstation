var reservationIdToDelete = null;
var isWorkstationsDeleteFromMyReservations = false;

function displayDeleteReservationPopup(originId, reservationId, workstationId, selectedReservationDay, isDeleteFromMyReservations) {
  reservationIdToDelete = reservationId;
  isWorkstationsDeleteFromMyReservations = isDeleteFromMyReservations;
  var workstation = getWorkstationById(workstationId);
  var actionEvents = [
    createValueChangeTargetEvent("DateLabel", dateToString(selectedReservationDay, "yyyy MMMM dd.")),
    createClickSourceEvent("DontDeleteReservationButton", "DontDeleteReservationButtonClicked"),
    createClickSourceEvent("DeleteReservationButton", "DeleteReservationButtonClicked"),
  ];
  var data = {
    "DeleteReservationPopup": {
      "headerText": workstation.name
    }
  };
  display(DeleteReservationPopup, data, originId, actionEvents);
}

page DeleteReservationPopup {
  layout: vertical;
  template: popup;

  label ConfirmationLabel {
    template: heading4Primary|multi;
    alignment: left;
  }

  spacer {
    span: 8;
  }

  label DateLabel {
    template: bodyCopy1CondensedSecondary;
    alignment: left;
  }

  container DeleteReservationButtonContainer {
    layout: horizontalButtonGroup;

    button DontDeleteReservationButton {
      template: secondaryMedium;
    }

    button DeleteReservationButton {
      template: primaryMedium;
    }
  }
}

function onDeleteReservationPopupCancel(originId) {}

function onDontDeleteReservationButtonClicked(originId) {
  fireEvent(createShortToastNotificationTargetEvent(DICTIONARY.reservationDelete_unsuccessfulMsg), originId);
  finishPage("DeleteReservationPopup", originId);
}

function onDeleteReservationButtonClicked(originId) {
  deleteTypeDefinition("reservation", reservationIdToDelete);
  var reservationDeleteDao = {
    "id": reservationIdToDelete,
    "changeType": "DELETE"
  };
  sendDataChange("reservation", [reservationDeleteDao]);

  if(isWorkstationsDeleteFromMyReservations) {
    fireEvent(createRemoveItemTargetEvent("UserSpecificReservationsList", reservationIdToDelete), "UserSpecificReservationsPage");
  }
  else {
    fireEvent(createRefreshItemTargetEvent("WorkstationsList", createWorkstationsData()), "WorkstationsPage");
    fireEvent(createRefreshItemTargetEvent("DashboardList", createDashboardListData(reservingUser.teamId)), "DashboardPage");
  }
  fireEvent(createShortToastNotificationTargetEvent(DICTIONARY.reservationDelete_successMsg), originId);

  finishPage("DeleteReservationPopup", originId);
}
