
function getMeetingRooms() {
  return select()
  .from("meetingRoom")
  .orderBy("name", "asc")
  .execute();
}

function getFirstMeetingRoom() {
  var meetingRooms = select()
  .from("meetingRoom")
  .orderBy("name", "asc")
  .execute();
  if (!meetingRooms.isEmpty()) {
    return meetingRooms.get(0);
  }
  return null;
}

function getMeetingRoomById(meetingRoomId) {
  var meetingRooms = select().from("meetingRoom").where(eq("id", meetingRoomId)).execute();

  if(meetingRooms.isEmpty()) {
    return null;
  }

  return meetingRooms.get(0);
}

function getMeetingRoomByReservationId(reservationId) {
  var daos = select()
  .selectAs("meetingRoom.id", "id")
  .selectAs("meetingRoom.name", "name")
  .selectAs("meetingRoom.capacity", "capacity")
  .selectAs("meetingRoom.location", "location")
  .from("reservation")
  .join("innerJoin", table("meetingRoom"), custom("reservation.meetingRoomId = meetingRoom.id"))
  .where(eq("reservation.id", reservationId))
  .execute();

  if (daos.isEmpty()) {
    return null;
  }
  return daos.get(0);
}

function getMeetingRoomsWithNotesStatistics() {
  return select()
  .selectAs("meetingRoom.id", "id")
  .selectAs("meetingRoom.name || ' (' || meetingRoom.capacity || ')'", "complexName")
  .selectAs("count(note.id)", "unhandledNoteCount")
  .join("leftJoin", table("note"), and(custom("meetingRoom.id = note.meeting_room_id"), eq("note.checked", false)))
  .from("meetingRoom")
  .groupBy(["meetingRoom.id"])
  .orderBy("meetingRoom.name", "asc")
  .execute();
}
