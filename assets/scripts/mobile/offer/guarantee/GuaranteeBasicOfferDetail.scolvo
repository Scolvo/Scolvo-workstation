import {
  /mobile/Builders,
  /mobile/offer/common/CurrencyBuilder,
  /mobile/repository/OfferRepository,
  /mobile/offer/guarantee/GuaranteeProposedPricing
}

var guaranteeOfferData = {};

function displayGuaranteeBasicOfferDetailFragment(offerId, originId) {
  if (offerId != null && !offerId.isEmpty()) {
    guaranteeOfferData.clear();
    guaranteeOfferData.put("offerId", offerId);
    guaranteeOfferData.putAll(getGuaranteeOfferByOfferId(offerId));
  }

  var guaranteeAmount = guaranteeOfferData.amount;
  if (guaranteeOfferData.amount != null && isNumber(guaranteeOfferData.amount.toString())) {
    guaranteeAmount = decimalFormat(guaranteeOfferData.amount, "###,##0.00");
  }

  var actionEvents = [
    buildSourceValueChangedEvent("TypeOfPlacement", "GuaranteeOfferTypeOfPlacementValueChanged"),
    buildSourceValueChangedEvent("PurposeOfPlacement", "GuaranteeOfferPurposeOfPlacementValueChanged"),
    buildSourceValueChangedEvent("Amount", "GuaranteeOfferAmountValueChanged"),
    buildSourceSelectionChanged("Currency", "GuaranteeOfferCurrencySelectionChanged"),
    buildSourceValueChangedEvent("RepaymentPeriod", "GuaranteeOfferRepaymentPeriodValueChanged"),
    buildSourceValueChangedEvent("AvailabilityPeriod", "GuaranteeOfferAvailabilityPeriodValueChanged"),
    buildSourceClickedEvent("PrevButton", "GuaranteeBasicOfferDetailPrevButtonClicked"),
    buildSourceClickedEvent("NextButton", "GuaranteeBasicOfferDetailNextButtonClicked"),
    buildTargetValueChangeEvent("TypeOfPlacement", guaranteeOfferData.typeOfPlacement),
    buildTargetValueChangeEvent("PurposeOfPlacement", guaranteeOfferData.purposeOfPlacement),
    buildTargetValueChangeEvent("Amount", guaranteeAmount),
    buildTargetValueChangeEvent("RepaymentPeriod", guaranteeOfferData.repaymentPeriod),
    buildTargetValueChangeEvent("AvailabilityPeriod", guaranteeOfferData.availabilityPeriod)
  ];

  var data = {
    "GuaranteeBasicOfferDetailFragment": {
      "CurrencyOptions": buildCurrencyOptions(guaranteeOfferData.currency)
    }
  };
  displayFragment("IndicativeOfferFormContainer", GuaranteeBasicOfferDetailFragment, data, originId, actionEvents);
}

fragment GuaranteeBasicOfferDetailFragment {
  layout: vertical;
  span: 0;
  template: general;
  isScrollable: true;

  inputField TypeOfPlacement {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField PurposeOfPlacement {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField Amount {
    template: inputFieldSimple;
    inputType: number;
  }

  inputField Currency {
    template: inputFieldSimple;
    inputType: selectOne;
  }

  inputField RepaymentPeriod {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField AvailabilityPeriod {
    template: inputFieldSimple;
    inputType: text;
  }

  container ButtonContainer {
    layout: horizontalButtonGroup;

    button PrevButton {
      template: secondaryMedium;
    }

    button NextButton {
      template: primaryMedium;
    }
  }

}

function onGuaranteeBasicOfferDetailFragmentLoaded(originId) {}

function onGuaranteeOfferTypeOfPlacementValueChanged(originId) {
  guaranteeOfferData.put("typeOfPlacement", $IN.data.message);
}

function onGuaranteeOfferPurposeOfPlacementValueChanged(originId) {
  guaranteeOfferData.put("purposeOfPlacement", $IN.data.message);
}

function onGuaranteeOfferAmountValueChanged(originId) {
  if ($IN.data.message != null && !$IN.data.message.isEmpty()) {
    guaranteeOfferData.put("amount", parseNumber($IN.data.message));
  } else {
    guaranteeOfferData.put("amount", null);
  }
}

function onGuaranteeOfferCurrencySelectionChanged(originId) {
  guaranteeOfferData.put("currency", $IN.data.value);
}

function onGuaranteeOfferRepaymentPeriodValueChanged(originId) {
  guaranteeOfferData.put("repaymentPeriod", $IN.data.message);
}

function onGuaranteeOfferAvailabilityPeriodValueChanged(originId) {
  guaranteeOfferData.put("availabilityPeriod", $IN.data.message);
}

function onGuaranteeBasicOfferDetailPrevButtonClicked(originId) {
  displayIndicativeOfferFragment(originId);
}

function onGuaranteeBasicOfferDetailNextButtonClicked(originId) {
  if(validateGuaranteeBasicOfferDetailFragment(originId)) {
    displayGuaranteeProposedPricingFragment(originId);
  }
}

function validateGuaranteeBasicOfferDetailFragment(originId) {
  var isValid = true;
  if(guaranteeOfferData.typeOfPlacement != null && guaranteeOfferData.typeOfPlacement.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("TypeOfPlacement", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(guaranteeOfferData.purposeOfPlacement != null && guaranteeOfferData.purposeOfPlacement.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("PurposeOfPlacement", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(guaranteeOfferData.repaymentPeriod != null && guaranteeOfferData.repaymentPeriod.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("RepaymentPeriod", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(guaranteeOfferData.availabilityPeriod != null && guaranteeOfferData.availabilityPeriod.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("AvailabilityPeriod", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if (guaranteeOfferData.amount == null) {
    fireEvent(buildErrorValueChangeEvent("Amount", DICTIONARY.validationMsg_requiredField), originId);
    isValid = false;
  }
  if (guaranteeOfferData.currency == null) {
    fireEvent(buildErrorValueChangeEvent("Currency", DICTIONARY.validationMsg_requiredField), originId);
    isValid = false;
  }
  return isValid;
}
