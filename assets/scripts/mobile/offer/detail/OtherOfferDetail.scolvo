import {
  /mobile/Builders,
  /mobile/offer/OfferBuilder,
  /mobile/repository/OfferRepository,
  /mobile/offer/DeleteOfferConfirmation,
  /mobile/offer/detail/AttachmentOffer,
  /mobile/offer/common/OfferShare
}

function displayOtherOfferDetailPage(originId, selectedOffer) {
  var deliveryDeadline = "";
  if (selectedOffer.deliveryDeadline != null) {
    deliveryDeadline = dateToString(selectedOffer.deliveryDeadline, "dd.MM.yyyy.");
  }

  var statusDate = "";
  if (selectedOffer.statusDate != null) {
    statusDate = dateToString(selectedOffer.statusDate, "dd.MM.yyyy.");
  }

  var detailFormData =  {
    "offerType": resolveOfferType(selectedOffer.offerType),
    "subject": selectedOffer.subject,
    "receiver": selectedOffer.receiver,
    "deliveryDeadline": deliveryDeadline,
    "importantNotice": selectedOffer.importantNotice,
    "status": resolveOfferStatus(selectedOffer.status),
    "statusDate": statusDate,
    "additionalConditionsNotes": selectedOffer.additionalConditionsNotes
  };

  var pageActions = [];
  if (sessionUserIsRM()) {
    pageActions.addAll(["EditOtherOffer", "DeleteOtherOffer", "AttachmentOffer", "ShareOtherOffer"]);
  }
  else if (sessionUserIsBCM()) {
    pageActions.add("EditOtherOffer");
  }

  var data = {
    "OtherOfferDetailPage": {
      "actions": pageActions,
      "OfferDetailForm": detailFormData
    }
  };

  display(OtherOfferDetailPage, data, originId);
}

page OtherOfferDetailPage {
  layout: vertical;
  template: detail;
  scolvoMenuVisible: false;

  form OfferDetailForm {
    template: detail;
    span: 0;
    fields: [
      field OfferType => offerType formItemReadOnlyFull,
      field Subject => subject formItemReadOnlyFull,
      field Receiver => receiver formItemReadOnlyFull,
      field DeliveryDeadline => deliveryDeadline formItemReadOnlyFull,
      field ImportantNotice => importantNotice formItemReadOnlyFull,
      field Status => status formItemReadOnlyFull,
      field StatusUpdateDate => statusDate formItemReadOnlyFull,
      field Notes => additionalConditionsNotes formItemReadOnlyFull
    ]
  }
}

function onOtherOfferDetailPageLoaded(originId) {}

function onEditOtherOffer(originId) {
  finishPage("OtherOfferDetailPage", originId);
  displayIndicativeOfferPage(originId, selectedOfferDao.companyId, selectedOfferDao.id);
}

function onDeleteOtherOffer(originId) {
  displayDeleteOfferConfirmationPage(originId, "OtherOfferDetailPage");
}

function onShareOtherOffer(originId) {
  shareOffer(selectedOfferDao.id, "Other");
}
