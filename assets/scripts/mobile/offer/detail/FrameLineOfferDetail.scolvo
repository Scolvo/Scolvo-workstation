import {
  /mobile/Builders,
  /mobile/offer/OfferBuilder,
  /mobile/repository/OfferRepository,
  /mobile/offer/DeleteOfferConfirmation,
  /mobile/offer/detail/AttachmentOffer,
  /mobile/offer/common/OfferShare,
  /mobile/offer/common/CurrencyBuilder
}

function displayFrameLineOfferDetailPage(originId, selectedOffer) {
  var frameLine = getFrameLineOfferByOfferId(selectedOffer.id);

  var deliveryDeadline = "";
  if (selectedOffer.deliveryDeadline != null) {
    deliveryDeadline = dateToString(selectedOffer.deliveryDeadline, "dd.MM.yyyy.");
  }

  var statusDate = "";
  if (selectedOffer.statusDate != null) {
    statusDate = dateToString(selectedOffer.statusDate, "dd.MM.yyyy.");
  }

  var frameLineAmount = frameLine.amount;
  if (frameLine.amount != null && isNumber(frameLine.amount.toString())) {
    frameLineAmount = decimalFormat(frameLine.amount, "###,##0.00");
  }

  var detailFormData =  {
    "offerType": resolveOfferType(selectedOffer.offerType),
    "subject": selectedOffer.subject,
    "receiver": selectedOffer.receiver,
    "deliveryDeadline": deliveryDeadline,
    "importantNotice": selectedOffer.importantNotice,
    "status": resolveOfferStatus(selectedOffer.status),
    "statusDate": statusDate,
    "typeOfPlacements": frameLine.typeOfPlacements,
    "amount": frameLineAmount,
    "currency": resolveCurrency(frameLine.currency),
    "repaymentPeriod": frameLine.repaymentPeriod,
    "useOfFunds": frameLine.useOfFunds,
    "prices": frameLine.prices,
    "interestRate": frameLine.interestRate,
    "paymentMethod": frameLine.paymentMethod,
    "collaterals": frameLine.collaterals,
    "notes": selectedOffer.additionalConditionsNotes
  };

  var pageActions = [];
  if (sessionUserIsRM()) {
    pageActions.addAll(["EditFrameLineOffer", "DeleteFrameLineOffer", "AttachmentOffer", "ShareFrameLineOffer"]);
  }
  else if (sessionUserIsBCM()) {
    pageActions.add("EditFrameLineOffer");
  }

  var data = {
    "FrameLineOfferDetailPage": {
      "actions": pageActions,
      "OfferDetailForm": detailFormData
    }
  };

  display(FrameLineOfferDetailPage, data, originId);
}

page FrameLineOfferDetailPage {
  layout: vertical;
  template: detail;
  scolvoMenuVisible: false;

  form OfferDetailForm {
    template: detail;
    span: 0;
    fields: [
      field OfferType => offerType formItemReadOnlyFull,
      field Subject => subject formItemReadOnlyFull,
      field Receiver => receiver formItemReadOnlyFull,
      field DeliveryDeadline => deliveryDeadline formItemReadOnlyFull,
      field ImportantNotice => importantNotice formItemReadOnlyFull,
      field Status => status formItemReadOnlyFull,
      field StatusUpdateDate => statusDate formItemReadOnlyFull,
      field TypeOfPlacements => typeOfPlacements formItemReadOnlyFull,
      field Amount => amount formItemReadOnlyFull,
      field Currency => currency formItemReadOnlyFull,
      field RepaymentPeriod => repaymentPeriod formItemReadOnlyFull,
      field UseOfFunds => useOfFunds formItemReadOnlyFull,
      field Prices => prices formItemReadOnlyFull,
      field InterestRate => interestRate formItemReadOnlyFull,
      field PaymentMethod => paymentMethod formItemReadOnlyFull,
      field Collaterals => collaterals formItemReadOnlyFull,
      field Notes => notes formItemReadOnlyFull
    ]
  }
}

function onFrameLineOfferDetailPageLoaded(originId) {}

function onEditFrameLineOffer(originId) {
  finishPage("FrameLineOfferDetailPage", originId);
  displayIndicativeOfferPage(originId, selectedOfferDao.companyId, selectedOfferDao.id);
}

function onDeleteFrameLineOffer(originId) {
  displayDeleteOfferConfirmationPage(originId, "FrameLineOfferDetailPage");
}

function onShareFrameLineOffer(originId) {
  shareOffer(selectedOfferDao.id, "FrameLine");
}
