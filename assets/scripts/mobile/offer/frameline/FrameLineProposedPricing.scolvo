import {
  /mobile/Builders,
  /mobile/offer/frameline/FrameLineAdditionalConditions
}

function displayFrameLineProposedPricingFragment(originId) {
  var actionEvents = [
    buildSourceValueChangedEvent("Prices", "FrameLineOfferPricesValueChanged"),
    buildSourceValueChangedEvent("InterestRate", "FrameLineOfferInterestRateValueChanged"),
    buildSourceValueChangedEvent("PaymentMethod", "FrameLineOfferPaymentMethodValueChanged"),
    buildSourceClickedEvent("PrevButton", "FrameLineProposedPricingPrevButtonClicked"),
    buildSourceClickedEvent("NextButton", "FrameLineProposedPricingNextButtonClicked"),
    buildTargetValueChangeEvent("Prices", frameLineOfferData.prices),
    buildTargetValueChangeEvent("InterestRate", frameLineOfferData.interestRate),
    buildTargetValueChangeEvent("PaymentMethod", frameLineOfferData.paymentMethod)
  ];
  displayFragment("IndicativeOfferFormContainer", FrameLineProposedPricingFragment, {}, originId, actionEvents);
}

fragment FrameLineProposedPricingFragment {
  layout: vertical;
  span: 0;
  template: general;
  isScrollable: true;

  inputField Prices {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField InterestRate {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField PaymentMethod {
    template: inputFieldSimple;
    inputType: text;
  }

  container ButtonContainer {
    layout: horizontalButtonGroup;

    button PrevButton {
      template: secondaryMedium;
    }

    button NextButton {
      template: primaryMedium;
    }
  }
}

function onFrameLineProposedPricingFragmentLoaded(originId) {}

function onFrameLineOfferPricesValueChanged(originId) {
  frameLineOfferData.put("prices", $IN.data.message);
}

function onFrameLineOfferInterestRateValueChanged(originId) {
  frameLineOfferData.put("interestRate", $IN.data.message);
}

function onFrameLineOfferPaymentMethodValueChanged(originId) {
  frameLineOfferData.put("paymentMethod", $IN.data.message);
}

function onFrameLineProposedPricingPrevButtonClicked(originId) {
  displayFrameLineBasicOfferDetailFragment(null, originId);
}

function onFrameLineProposedPricingNextButtonClicked(originId) {
  if (validateFrameLineProposedPricingFragment()) {
    displayFrameLineAdditionalConditionsFragment(originId);
  }
}

function validateFrameLineProposedPricingFragment() {
  var isValid = true;
  if(frameLineOfferData.prices != null && frameLineOfferData.prices.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("Prices", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(frameLineOfferData.interestRate != null && frameLineOfferData.interestRate.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("InterestRate", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(frameLineOfferData.paymentMethod != null && frameLineOfferData.paymentMethod.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("PaymentMethod", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  return isValid;
}
