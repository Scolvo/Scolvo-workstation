import {
  /mobile/Builders
}

function displayFrameLineAdditionalConditionsFragment(originId) {
  var actionEvents = [
    buildSourceValueChangedEvent("Collaterals", "FrameLineCollateralsValueChanged"),
    buildSourceValueChangedEvent("Notes", "FrameLineNotesValueChanged"),
    buildSourceClickedEvent("PrevButton", "FrameLineAdditionalConditionsPrevButtonClicked"),
    buildSourceClickedEvent("FinishButton", "FrameLineAdditionalConditionsFinishButtonClicked"),
    buildTargetValueChangeEvent("Collaterals", frameLineOfferData.collaterals),
    buildTargetValueChangeEvent("Notes", offerData.additionalConditionsNotes)
  ];
  displayFragment("IndicativeOfferFormContainer", FrameLineAdditionalConditionsFragment, {}, originId, actionEvents);
}

fragment FrameLineAdditionalConditionsFragment {
  layout: vertical;
  span: 0;
  template: general;
  isScrollable: true;

  inputField Collaterals {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField Notes {
    template: inputFieldSimple;
    inputType: textArea;
  }

  container ButtonContainer {
    layout: horizontalButtonGroup;

    button PrevButton {
      template: secondaryMedium;
    }

    button FinishButton {
      template: primaryMedium;
    }
  }
}

function onFrameLineAdditionalConditionsFragmentLoaded(originId) {}

function onFrameLineCollateralsValueChanged(originId) {
  frameLineOfferData.put("collaterals", $IN.data.message);
}

function onFrameLineNotesValueChanged(originId) {
  offerData.put("additionalConditionsNotes", $IN.data.message);
}

function onFrameLineAdditionalConditionsPrevButtonClicked(originId) {
  displayFrameLineProposedPricingFragment(originId);
}

function onFrameLineAdditionalConditionsFinishButtonClicked(originId) {
  if(validateFrameLineAdditionalConditionsFragment(originId)) {
    saveFrameLineOffer(originId);
    updateOfferNotes(originId);
  }
}

function validateFrameLineAdditionalConditionsFragment(originId) {
  var isValid = true;
  if(frameLineOfferData.collaterals != null && frameLineOfferData.collaterals.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("Collaterals", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(offerData.additionalConditionsNotes != null && offerData.additionalConditionsNotes.length() > 500) {
    fireEvent(buildErrorValueChangeEvent("Notes", DICTIONARY.validationMsg_TooLong500), originId);
    isValid = false;
  }
  return isValid;
}

function saveFrameLineOffer(originId) {
  finishPage("IndicativeOfferPage", originId);
  if(frameLineOfferData.containsKey("id")) {
    frameLineOfferData.put("changeType", "UPDATE");

    updateExecution("offerFrameLine", frameLineOfferData.id, frameLineOfferData);
  } else {
    frameLineOfferData.put("id", uuid());
    frameLineOfferData.put("changeType", "INSERT");

    insertExecution("offerFrameLine", frameLineOfferData);
  }
  sendDataChangeRq(originId, "offerFrameLine", [frameLineOfferData]);
}
