import {
  /mobile/Builders,
  /mobile/offer/common/CurrencyBuilder,
  /mobile/repository/OfferRepository,
  /mobile/offer/frameline/FrameLineProposedPricing
}

var frameLineOfferData = {};

function displayFrameLineBasicOfferDetailFragment(offerId, originId) {
  if (offerId != null && !offerId.isEmpty()) {
    frameLineOfferData.clear();
    frameLineOfferData.put("offerId", offerId);
    frameLineOfferData.putAll(getFrameLineOfferByOfferId(offerId));
  }

  var frameLineAmount = frameLineOfferData.amount;
  if (frameLineOfferData.amount != null && isNumber(frameLineOfferData.amount.toString())) {
    frameLineAmount = decimalFormat(frameLineOfferData.amount, "###,##0.00");
  }

  var actionEvents = [
    buildSourceValueChangedEvent("TypeOfPlacements", "FrameLineTypeOfPlacementsValueChanged"),
    buildSourceValueChangedEvent("Amount", "FrameLineAmountValueChanged"),
    buildSourceSelectionChanged("Currency", "FrameLineCurrencySelectionChanged"),
    buildSourceValueChangedEvent("RepaymentPeriod", "FrameLineRepaymentPeriodValueChanged"),
    buildSourceValueChangedEvent("UseOfFunds", "FrameLineUseOfFundsValueChanged"),
    buildSourceClickedEvent("PrevButton", "FrameLineBasicOfferDetailPrevButtonClicked"),
    buildSourceClickedEvent("NextButton", "FrameLineBasicOfferDetailNextButtonClicked"),
    buildTargetValueChangeEvent("TypeOfPlacements", frameLineOfferData.typeOfPlacements),
    buildTargetValueChangeEvent("Amount", frameLineAmount),
    buildTargetValueChangeEvent("RepaymentPeriod", frameLineOfferData.repaymentPeriod),
    buildTargetValueChangeEvent("UseOfFunds", frameLineOfferData.useOfFunds)
  ];

  var data = {
    "FrameLineBasicOfferDetailFragment": {
      "CurrencyOptions": buildCurrencyOptions(frameLineOfferData.currency)
    }
  };
  displayFragment("IndicativeOfferFormContainer", FrameLineBasicOfferDetailFragment, data, originId, actionEvents);
}

fragment FrameLineBasicOfferDetailFragment {
  layout: vertical;
  span: 0;
  template: general;
  isScrollable: true;

  inputField TypeOfPlacements {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField Amount {
    template: inputFieldSimple;
    inputType: number;
  }

  inputField Currency {
    template: inputFieldSimple;
    inputType: selectOne;
  }

  inputField RepaymentPeriod {
    template: inputFieldSimple;
    inputType: text;
  }

  inputField UseOfFunds {
    template: inputFieldSimple;
    inputType: text;
  }

  container ButtonContainer {
    layout: horizontalButtonGroup;

    button PrevButton {
      template: secondaryMedium;
    }

    button NextButton {
      template: primaryMedium;
    }
  }

}

function onFrameLineBasicOfferDetailFragmentLoaded(originId) {}

function onFrameLineTypeOfPlacementsValueChanged(originId) {
  frameLineOfferData.put("typeOfPlacements", $IN.data.message);
}

function onFrameLineAmountValueChanged(originId) {
  if ($IN.data.message != null && !$IN.data.message.isEmpty()) {
    frameLineOfferData.put("amount", parseNumber($IN.data.message));
  } else {
    frameLineOfferData.put("amount", null);
  }
}

function onFrameLineCurrencySelectionChanged(originId) {
  frameLineOfferData.put("currency", $IN.data.value);
}

function onFrameLineRepaymentPeriodValueChanged(originId) {
  frameLineOfferData.put("repaymentPeriod", $IN.data.message);
}

function onFrameLineUseOfFundsValueChanged(originId) {
  frameLineOfferData.put("useOfFunds", $IN.data.message);
}

function onFrameLineBasicOfferDetailPrevButtonClicked(originId) {
  displayIndicativeOfferFragment(originId);
}

function onFrameLineBasicOfferDetailNextButtonClicked(originId) {
  if (validateFrameLineBasicOfferDetailFragment(originId)) {
    displayFrameLineProposedPricingFragment(originId);
  }
}

function validateFrameLineBasicOfferDetailFragment(originId) {
  var isValid = true;
  if(frameLineOfferData.typeOfPlacements != null && frameLineOfferData.typeOfPlacements.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("TypeOfPlacement", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(frameLineOfferData.repaymentPeriod != null && frameLineOfferData.repaymentPeriod.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("RepaymentPeriod", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if(frameLineOfferData.useOfFunds != null && frameLineOfferData.useOfFunds.length() > 50) {
    fireEvent(buildErrorValueChangeEvent("UseOfFunds", DICTIONARY.validationMsg_TooLong50), originId);
    isValid = false;
  }
  if (frameLineOfferData.amount == null) {
    fireEvent(buildErrorValueChangeEvent("Amount", DICTIONARY.validationMsg_requiredField), originId);
    isValid = false;
  }
  if (frameLineOfferData.currency == null) {
    fireEvent(buildErrorValueChangeEvent("Currency", DICTIONARY.validationMsg_requiredField), originId);
    isValid = false;
  }
  return isValid;
}
