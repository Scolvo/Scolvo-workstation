var OFFER_TYPE_LOAN = "loan";
var OFFER_TYPE_GUARANTEE = "guarantee";
var OFFER_TYPE_FRAMELINE = "frame_line";
var OFFER_TYPE_DEPOSIT = "deposit";
var OFFER_TYPE_BUSINESSCARD = "business_card";
var OFFER_TYPE_PAYMENTS = "payments";
var OFFER_TYPE_LEASINGPRODUCT = "leasing_product";
var OFFER_TYPE_OTHER = "other";

var OFFER_STATUS_REALISED = "realised";
var OFFER_STATUS_APPROVERPENDINGDISBURSEMENT = "approved_pending_disbursement";
var OFFER_STATUS_PENDINGAPPROVAL = "pending_approval";
var OFFER_STATUS_REJECTEDBYRISK = "rejected_by_risk";
var OFFER_STATUS_APPLICATIONSUNDERPROCESSING = "applications_under_processing";
var OFFER_STATUS_OFFERSREFUSED = "offers_refused";
var OFFER_STATUS_OFFERSSENT = "offers_sent";
var OFFER_STATUS_IN_PREPARATION = "in_preparation";

function resolveOfferType(offerType) {
  return DICTIONARY.get("offerType_" + offerType);
}

function resolveOfferStatus(offerStatus) {
  return DICTIONARY.get("offerStatus_" + offerStatus);
}

function getOfferTypeOptions(selectedType) {
  return [
    buildSelectOptions(OFFER_TYPE_LOAN, DICTIONARY.offerType_loan, OFFER_TYPE_LOAN == selectedType),
    buildSelectOptions(OFFER_TYPE_GUARANTEE, DICTIONARY.offerType_guarantee, OFFER_TYPE_GUARANTEE == selectedType),
    buildSelectOptions(OFFER_TYPE_FRAMELINE, DICTIONARY.offerType_frame_line, OFFER_TYPE_FRAMELINE == selectedType),
    buildSelectOptions(OFFER_TYPE_DEPOSIT, DICTIONARY.offerType_deposit, OFFER_TYPE_DEPOSIT == selectedType),
    buildSelectOptions(OFFER_TYPE_BUSINESSCARD, DICTIONARY.offerType_business_card, OFFER_TYPE_BUSINESSCARD == selectedType),
    buildSelectOptions(OFFER_TYPE_PAYMENTS, DICTIONARY.offerType_payments, OFFER_TYPE_PAYMENTS == selectedType),
    buildSelectOptions(OFFER_TYPE_LEASINGPRODUCT, DICTIONARY.offerType_leasing_product, OFFER_TYPE_LEASINGPRODUCT == selectedType),
    buildSelectOptions(OFFER_TYPE_OTHER, DICTIONARY.offerType_other, OFFER_TYPE_OTHER == selectedType)
  ];
}

function getOfferStatusOptions(selectedType) {
  return [
    buildSelectOptions(OFFER_STATUS_IN_PREPARATION, DICTIONARY.offerStatus_in_preparation, OFFER_STATUS_IN_PREPARATION == selectedType),
    buildSelectOptions(OFFER_STATUS_OFFERSSENT, DICTIONARY.offerStatus_offers_sent, OFFER_STATUS_OFFERSSENT == selectedType),
    buildSelectOptions(OFFER_STATUS_OFFERSREFUSED, DICTIONARY.offerStatus_offers_refused, OFFER_STATUS_OFFERSREFUSED == selectedType),
    buildSelectOptions(OFFER_STATUS_APPLICATIONSUNDERPROCESSING, DICTIONARY.offerStatus_applications_under_processing, OFFER_STATUS_APPLICATIONSUNDERPROCESSING == selectedType),
    buildSelectOptions(OFFER_STATUS_REJECTEDBYRISK, DICTIONARY.offerStatus_rejected_by_risk, OFFER_STATUS_REJECTEDBYRISK == selectedType),
    buildSelectOptions(OFFER_STATUS_PENDINGAPPROVAL, DICTIONARY.offerStatus_pending_approval, OFFER_STATUS_PENDINGAPPROVAL == selectedType),
    buildSelectOptions(OFFER_STATUS_APPROVERPENDINGDISBURSEMENT, DICTIONARY.offerStatus_approved_pending_disbursement, OFFER_STATUS_APPROVERPENDINGDISBURSEMENT == selectedType),
    buildSelectOptions(OFFER_STATUS_REALISED, DICTIONARY.offerStatus_realised, OFFER_STATUS_REALISED == selectedType)
  ];
}

function mapOfferDaoToListData(offerDao) {
  var offerData = {
    "id": offerDao.id,
    "offerType": resolveOfferType(offerDao.offerType)
 };
  var description = "";
  if (offerDao.companyName != null) {
    description = description + offerDao.companyName + "\n";
  }
  description = description + DICTIONARY.status + ": " + resolveOfferStatus(offerDao.status) + "\n" + DICTIONARY.statusUpdate + ": " + dateToString(offerDao.statusDate, "dd.MM.yyyy.");
  if (offerDao.deliveryDeadline != null && offerDao.deliveryDeadline != 0) {
    description = description + "\n" + DICTIONARY.deliveryDeadline + ": " + dateToString(offerDao.deliveryDeadline, "dd.MM.yyyy.");
  }
  if(!sessionUserIsRM() && offerDao.userName != null && !offerDao.userName.isEmpty()) {
    description = description + "\n" + DICTIONARY.rm + ": " + offerDao.getOrDefault("userName", "");
  }

  offerData.put("description", description);
  return offerData;
}
