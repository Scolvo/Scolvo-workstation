import {
  /mobile/repository/OfferRepository,
  /mobile/repository/AttachmentRepository
}

var originDetailPageId;

function displayDeleteOfferConfirmationPage(originId, originPageId) {
  originDetailPageId = originPageId;
  display(DeleteOfferConfirmPage, {}, originId);
}

page DeleteOfferConfirmPage {
  template: confirmationPopup;
  layout: vertical;
}

function onDeleteOfferConfirmPageSave(originId) {
  finishPage(originDetailPageId, originId);
  fireEvent(buildRemoveItemEvent("OfferList", selectedOfferDao.id), "ProspectClientDetailPage");
  fireEvent(buildRemoveItemEvent("OfferList", selectedOfferDao.id), "RegularClientDetailPage");
  deleteOfferDaoFromDatabase(selectedOfferDao);
  deleteOfferAttachment(selectedOfferDao.id);
}

function onDeleteOfferConfirmPageCancel(originId) {}

function deleteOfferDaoFromDatabase(deleteOfferDao) {
  deleteOfferDao.put("changeType", "DELETE");
  deleteExecution("offer", deleteOfferDao.id);
  sendDataChangeRq(originId, "offer", [deleteOfferDao]);

  if (deleteOfferDao.offerType == OFFER_TYPE_LOAN) {
    var deleteLoanOfferDao = getLoanOfferByOfferId(deleteOfferDao.id);
    deleteLoanOfferDao.put("changeType", "DELETE");
    deleteExecution("offerLoan", deleteLoanOfferDao.id);
    sendDataChangeRq(uuid(), "offerLoan", [deleteLoanOfferDao]);
  } else if (deleteOfferDao.offerType == OFFER_TYPE_GUARANTEE) {
    var deletGaranteeOfferDao = getGuaranteeOfferByOfferId(deleteOfferDao.id);
    deletGaranteeOfferDao.put("changeType", "DELETE");
    deleteExecution("offerGuarantee", deletGaranteeOfferDao.id);
    sendDataChangeRq(uuid(), "offerGuarantee", [deletGaranteeOfferDao]);
  } else if (deleteOfferDao.offerType == OFFER_TYPE_FRAMELINE) {
    var deletFrameLineOfferDao = getFrameLineOfferByOfferId(deleteOfferDao.id);
    deletFrameLineOfferDao.put("changeType", "DELETE");
    deleteExecution("offerFrameLine", deletFrameLineOfferDao.id);
    sendDataChangeRq(uuid(), "offerFrameLine", [deletFrameLineOfferDao]);
  } else if (deleteOfferDao.offerType == OFFER_TYPE_DEPOSIT) {
    var deleteDepositOffer = getDepositOfferByOfferId(deleteOfferDao.id);
    deleteDepositOffer.put("changeType", "DELETE");
    deleteExecution("offerDeposit", deleteDepositOffer.id);
    sendDataChangeRq(uuid(), "offerDeposit", [deleteDepositOffer]);
  }
}
