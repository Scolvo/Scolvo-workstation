import {
  /common/Roles,
  /mobile/repository/ReservationRepository
}

var SUPPORTED_DATA_CHANGE_TYPE_DEFINITIONS = {
  "reservation": {
    "roles": [WORKER]
  },
  "user": {
    "roles": [WORKER]
  },
  "team": {
    "roles": [WORKER]
  },
  "workplace": {
    "roles": [WORKER]
  },
  "meetingRoom": {
    "roles": [WORKER]
  },
  "note": {
    "roles": [WORKER]
  },
};

function onDataChangeDg(originId) {
  if (getCurrentUser() == null) {
    return null;
  }
  var changeset = $IN.changeset;
  var typeDefinition = $IN.typeDefinition;
  debug("Data change message arrive with type definition: " + typeDefinition + ", size: " + changeset.size());
  var typeDefinitionDescriptor = SUPPORTED_DATA_CHANGE_TYPE_DEFINITIONS.get(typeDefinition);
  if (typeDefinitionDescriptor == null) {
    debug(typeDefinition + " type definition is not supported by data change");
    return null;
  }
  if (!sessionUserIsAvaibleRoles(typeDefinitionDescriptor.roles)) {
    debug(typeDefinition + " type definition is not supported by user role");
    return null;
  }
  changeset.each(function(changeDao) {
    var changeType = changeDao.changeType;
    if (changeType == "INSERT") {
      insertChangeDao(typeDefinition, changeDao);
    } else if (changeType == "UPDATE") {
      updateTypeDefinition(typeDefinition, changeDao.id, changeDao);
    } else if (changeType == "DELETE") {
      deleteTypeDefinition(typeDefinition, changeDao.id);
    }
  });
  debug("Changes are executed.");
  if (typeDefinition == "note") {
    debug("Refreshing pages with note data ...");
    refreshNotesSummaryPage();
    refreshMeetingRoomNotesPage();
  }
}

function insertChangeDao(typeDefinition, changeDao) {
  insertOrReplaceTypeDefinition(typeDefinition, changeDao);
  if(typeDefinition == "team" && getTeamById(changeDao.id) == null) {
    addTeamToTeamsData(changeDao);
  } else if(typeDefinition == "workplace" && getWorkstationById(changeDao.id) == null) {
    addWorkstationToWorkstationsData(changeDao);
  } else if(typeDefinition == "meetingRoom" && getMeetingRoomById(changeDao.id) == null) {
    addMeetingRoomToMeetingRoomsData(changeDao);
  }
}
