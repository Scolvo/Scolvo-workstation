import {
  /common/TypeDefinitionExtension,
  /common/Roles,
  /mobile/repository/CompanyRepository,
  /mobile/client/RegularClients,
  /mobile/client/ProspectClients
}

function sendDataChangeRq(originId_, typeDefinition_, changeset_) {
  var dataChangeMsg = com.scolvo.core.vm.action.rq.DataChangeRq(uuid());
  dataChangeMsg.setTypeDefinition(typeDefinition_);
  dataChangeMsg.setTypeDefinitionVersion(nowInMillis());
  dataChangeMsg.setChangeset(changeset_);
  publish(dataChangeMsg);
}

var SUPPORTED_DATA_CHANGE_TYPE_DEFINITIONS = {
  "reservation": {
    "roles": [WORKER]
  }
};

function onDataChangeDg(originId) {
  if (getCurrentUser() == null) {
    return null;
  }
  var changeset = $IN.changeset;
  var typeDefinition = $IN.typeDefinition;
  debug("Data change message arrive with type definition: " + typeDefinition + ", size: " + changeset.size());
  var typeDefinitionDescriptor = SUPPORTED_DATA_CHANGE_TYPE_DEFINITIONS.get(typeDefinition);
  if (typeDefinitionDescriptor == null) {
    debug(typeDefinition + " type definition is not supported by data change");
    return null;
  }
  if (!sessionUserIsAvaibleRoles(typeDefinitionDescriptor.roles)) {
    debug(typeDefinition + " type definition is not supported by user role");
    return null;
  }
  changeset.each(function(changeDao) {
    var changeType = changeDao.changeType;
    if (changeType == "INSERT") {
      insertExecution(typeDefinition, changeDao);
    } else if (changeType == "UPDATE") {
      updateExecution(typeDefinition, changeDao.id, changeDao);
    } else if (changeType == "DELETE") {
      deleteExecution(typeDefinition, changeDao.id);
    }
  });
}
